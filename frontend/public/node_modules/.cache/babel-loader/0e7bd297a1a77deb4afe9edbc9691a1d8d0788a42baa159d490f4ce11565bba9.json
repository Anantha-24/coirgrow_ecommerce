{"ast":null,"code":"import { LOGIN_REQUEST, LOGIN_FAIL, LOGIN_SUCCESS, CLEAR_ERRORS, REGISTER_USER_REQUEST, REGISTER_USER_SUCCESS } from \"../constants/userConstants\";\nimport axios from \"axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/v1/login`, {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const register = userData => async dispatch => {\n  try {\n    dispatch({\n      type: REGISTER_USER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/v1/register`, userData, config);\n    dispatch({\n      type: REGISTER_USER_SUCCESS,\n      payload: data.user\n    });\n  } catch (error) {\n    dispatch({});\n  }\n};\n\n//Clearing Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["LOGIN_REQUEST","LOGIN_FAIL","LOGIN_SUCCESS","CLEAR_ERRORS","REGISTER_USER_REQUEST","REGISTER_USER_SUCCESS","axios","login","email","password","dispatch","type","config","headers","data","post","payload","user","error","response","message","register","userData","clearErrors"],"sources":["C:/Users/anant/OneDrive/Desktop/Project/Coir-Grow/frontend/src/actions/userAction.js"],"sourcesContent":["\r\nimport {\r\n    LOGIN_REQUEST,\r\n    LOGIN_FAIL,\r\n    LOGIN_SUCCESS, \r\n    CLEAR_ERRORS,\r\n    REGISTER_USER_REQUEST,\r\n    REGISTER_USER_SUCCESS\r\n} from \"../constants/userConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: LOGIN_REQUEST });\r\n        \r\n        const config = {headers: { \"Content-Type\": \"application/json\" } };\r\n\r\n        const { data } = await axios.post(\r\n            `/api/v1/login`,\r\n            {email, password},\r\n            config\r\n        );\r\n\r\n      dispatch({ type: LOGIN_SUCCESS, payload:data.user }); \r\n    } catch (error) {\r\n        dispatch({ type: LOGIN_FAIL, payload: error.response.data.message});\r\n    }\r\n};\r\n\r\nexport const register = (userData) => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: REGISTER_USER_REQUEST });\r\n\r\n        const config = { headers: { \"Content-Type\": \"multipart/form-data\" }};\r\n\r\n        const { data } = await axios.post(`/api/v1/register`, userData, config);\r\n\r\n        dispatch({ type: REGISTER_USER_SUCCESS, payload: data.user });\r\n    } catch (error) {\r\n       dispatch({\r\n        \r\n       }) \r\n    }\r\n\r\n}\r\n\r\n//Clearing Errors\r\nexport const clearErrors = ()=> async (dispatch) =>{\r\n    dispatch({ type: CLEAR_ERRORS});\r\n};"],"mappings":"AACA,SACIA,aAAa,EACbC,UAAU,EACVC,aAAa,EACbC,YAAY,EACZC,qBAAqB,EACrBC,qBAAqB,QAClB,4BAA4B;AACnC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC1D,IAAG;IACCA,QAAQ,CAAC;MAAEC,IAAI,EAAEX;IAAc,CAAC,CAAC;IAEjC,MAAMY,MAAM,GAAG;MAACC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAAE,CAAC;IAEjE,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI,CAC5B,eAAc,EACf;MAACP,KAAK;MAAEC;IAAQ,CAAC,EACjBG,MACJ,CAAC;IAEHF,QAAQ,CAAC;MAAEC,IAAI,EAAET,aAAa;MAAEc,OAAO,EAACF,IAAI,CAACG;IAAK,CAAC,CAAC;EACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZR,QAAQ,CAAC;MAAEC,IAAI,EAAEV,UAAU;MAAEe,OAAO,EAAEE,KAAK,CAACC,QAAQ,CAACL,IAAI,CAACM;IAAO,CAAC,CAAC;EACvE;AACJ,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAIC,QAAQ,IAAK,MAAOZ,QAAQ,IAAK;EACtD,IAAG;IACCA,QAAQ,CAAC;MAAEC,IAAI,EAAEP;IAAsB,CAAC,CAAC;IAEzC,MAAMQ,MAAM,GAAG;MAAEC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAsB;IAAC,CAAC;IAEpE,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAE,kBAAiB,EAAEO,QAAQ,EAAEV,MAAM,CAAC;IAEvEF,QAAQ,CAAC;MAAEC,IAAI,EAAEN,qBAAqB;MAAEW,OAAO,EAAEF,IAAI,CAACG;IAAK,CAAC,CAAC;EACjE,CAAC,CAAC,OAAOC,KAAK,EAAE;IACbR,QAAQ,CAAC,CAET,CAAC,CAAC;EACL;AAEJ,CAAC;;AAED;AACA,OAAO,MAAMa,WAAW,GAAGA,CAAA,KAAK,MAAOb,QAAQ,IAAI;EAC/CA,QAAQ,CAAC;IAAEC,IAAI,EAAER;EAAY,CAAC,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}