{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anant\\\\OneDrive\\\\Desktop\\\\Project\\\\Coir-Grow\\\\frontend\\\\src\\\\component\\\\User\\\\UpdateProfile.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport \"./UpdateProfile.css\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { Link } from \"react-router-dom\";\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearErrors, updateProfile } from \"../../actions/userAction\";\nimport { useAlert } from \"react-alert\";\nimport { UPDATE_PROFILE_RESET } from \"../../constants/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateProfile = () => {\n  _s();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    user\n  } = useSelector(state => state.user);\n  const {\n    error,\n    isUpdated,\n    loading\n  } = useSelector(state => state.profile);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [avatar, setAvatar] = useState();\n  const [avatarPreview, setAvatarPreview] = useState(\"/Profile.png\");\n  const registerSubmit = e => {\n    e.preventDefault();\n    const myForm = new FormData();\n    myForm.set(\"name\", name);\n    myForm.set(\"email\", email);\n    myForm.set(\"avatar\", avatar);\n    dispatch(register(myForm));\n  };\n  const registerDataChange = e => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setAvatarPreview(reader.result);\n        setAvatar(reader.result);\n      }\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  };\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email);\n      setAvatarPreview(user.avatar.url);\n    }\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    if (isUpdated) {\n      alert.success(\"Profile Updated Successfully\");\n      dispatch(loadUser());\n      history.pushState(\"/account\");\n      dispatch({\n        type: UPDATE_PROFILE_RESET\n      });\n    }\n  }, [dispatch, error, alert, history, isAuthenticated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 12\n  }, this);\n};\n_s(UpdateProfile, \"2woxDwrwqna2AgL7wv/mrVGuh+w=\", false, function () {\n  return [useDispatch, useAlert, useSelector, useSelector];\n});\n_c = UpdateProfile;\nexport default UpdateProfile;\nvar _c;\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","Loader","Link","MailOutlineIcon","FaceIcon","useDispatch","useSelector","clearErrors","updateProfile","useAlert","UPDATE_PROFILE_RESET","jsxDEV","_jsxDEV","UpdateProfile","_s","dispatch","alert","user","state","error","isUpdated","loading","profile","name","setName","email","setEmail","avatar","setAvatar","avatarPreview","setAvatarPreview","registerSubmit","e","preventDefault","myForm","FormData","set","register","registerDataChange","reader","FileReader","onload","readyState","result","readAsDataURL","target","files","url","success","loadUser","history","pushState","type","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anant/OneDrive/Desktop/Project/Coir-Grow/frontend/src/component/User/UpdateProfile.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport \"./UpdateProfile.css\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport FaceIcon from \"@material-ui/icons/Face\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearErrors, updateProfile } from \"../../actions/userAction\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { UPDATE_PROFILE_RESET } from \"../../constants/userConstants\";\r\n\r\n\r\nconst UpdateProfile =() => {\r\n\r\n        const dispatch = useDispatch();\r\n        const alert = useAlert();\r\n      \r\n        const { user } = useSelector((state) => state.user);\r\n        const { error, isUpdated, loading } = useSelector((state) => state.profile);\r\n\r\n          const [name, setName ] = useState(\"\");\r\n          const [email, setEmail ] = useState(\"\");\r\n          const [avatar, setAvatar] = useState();\r\n          const [avatarPreview, setAvatarPreview] = useState(\"/Profile.png\");   \r\n      \r\n          const registerSubmit = (e) => {\r\n            e.preventDefault();\r\n        \r\n            const myForm = new FormData();\r\n           \r\n            myForm.set(\"name\", name);\r\n            myForm.set(\"email\", email);\r\n            myForm.set(\"avatar\", avatar);\r\n            dispatch(register(myForm));\r\n          };\r\n        \r\n          const registerDataChange = (e) => {\r\n              const reader = new FileReader();\r\n        \r\n              reader.onload = () => {\r\n                if (reader.readyState === 2) {\r\n                  setAvatarPreview(reader.result);\r\n                  setAvatar(reader.result);\r\n                }\r\n              };\r\n        \r\n              reader.readAsDataURL(e.target.files[0]);\r\n          };\r\n          \r\n          useEffect(() =>{\r\n        if(user) {\r\n          setName(user.name);\r\n          setEmail(user.email);\r\n          setAvatarPreview(user.avatar.url);\r\n        }\r\n\r\n          if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n          }\r\n          \r\n          if(isUpdated) {\r\n           alert.success(\"Profile Updated Successfully\");\r\n           dispatch(loadUser());\r\n\r\n           history.pushState(\"/account\");\r\n\r\n           dispatch({\r\n            type: UPDATE_PROFILE_RESET,\r\n           });\r\n          }\r\n          },[dispatch, error, alert, history, isAuthenticated]);\r\n\r\n    return <div></div>;\r\n\r\n};\r\n \r\nexport default UpdateProfile;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}