{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anant\\\\OneDrive\\\\Desktop\\\\Project\\\\Coir-Grow\\\\frontend\\\\src\\\\component\\\\User\\\\UpdatePassword.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport \"./UpdatePassword.css\";\nimport Loader from \"../layout/Loader/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { clearErrors, updatePassword } from \"../../actions/userAction\";\nimport { useAlert } from \"react-alert\";\nimport { UPDATE_PASSWORD_RESET } from \"../../constants/userConstants\";\nimport MetaData from \"../layout/MetaData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdatePassword = () => {\n  _s();\n  const dispatch = useDispatch();\n  const alert = useAlert();\n  const {\n    user\n  } = useSelector(s);\n  const {\n    error,\n    isUpdated,\n    loading\n  } = useSelector(state => state.profile);\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [avatar, setAvatar] = useState(\"\");\n  const [avatarPreview, setAvatarPreview] = useState(\"/Profile.png\");\n  const updateProfileSubmit = e => {\n    e.preventDefault();\n    const myForm = new FormData();\n    myForm.set(\"name\", name);\n    myForm.set(\"email\", email);\n    myForm.set(\"avatar\", avatar);\n    dispatch(updateProfile(myForm));\n  };\n  const updateProfileDataChange = e => {\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (reader.readyState === 2) {\n        setAvatarPreview(reader.result);\n        setAvatar(reader.result);\n      }\n    };\n    reader.readAsDataURL(e.target.files[0]);\n  };\n  useEffect(() => {\n    if (user) {\n      setName(user.name);\n      setEmail(user.email);\n      setAvatarPreview(user.avatar.url);\n    }\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    if (isUpdated) {\n      alert.success(\"Profile Updated Successfully\");\n      dispatch(loadUser());\n      if (history) {\n        history.push(\"/account\");\n      }\n      dispatch({\n        type: UPDATE_PROFILE_RESET\n      });\n    }\n  }, [dispatch, error, alert, history, user, isUpdated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 12\n  }, this);\n};\n_s(UpdatePassword, \"FYmNXKm6BGmk/eyXTqDsEMjJXRs=\", false, function () {\n  return [useDispatch, useAlert, useSelector, useSelector];\n});\n_c = UpdatePassword;\nexport default UpdatePassword;\nvar _c;\n$RefreshReg$(_c, \"UpdatePassword\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","Loader","useDispatch","useSelector","clearErrors","updatePassword","useAlert","UPDATE_PASSWORD_RESET","MetaData","jsxDEV","_jsxDEV","UpdatePassword","_s","dispatch","alert","user","s","error","isUpdated","loading","state","profile","name","setName","email","setEmail","avatar","setAvatar","avatarPreview","setAvatarPreview","updateProfileSubmit","e","preventDefault","myForm","FormData","set","updateProfile","updateProfileDataChange","reader","FileReader","onload","readyState","result","readAsDataURL","target","files","url","success","loadUser","history","push","type","UPDATE_PROFILE_RESET","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anant/OneDrive/Desktop/Project/Coir-Grow/frontend/src/component/User/UpdatePassword.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\r\nimport \"./UpdatePassword.css\";\r\nimport Loader from \"../layout/Loader/Loader\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearErrors, updatePassword} from \"../../actions/userAction\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { UPDATE_PASSWORD_RESET } from \"../../constants/userConstants\";\r\nimport MetaData from \"../layout/MetaData\";\r\n\r\nconst UpdatePassword = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const alert = useAlert();\r\n  \r\n    const {user} = useSelector((s))\r\n    const { error, isUpdated, loading } = useSelector((state) => state.profile);\r\n\r\n      const [name, setName ] = useState(\"\");\r\n      const [email, setEmail ] = useState(\"\");\r\n      const [avatar, setAvatar] = useState(\"\");\r\n      const [avatarPreview, setAvatarPreview] = useState(\"/Profile.png\");   \r\n  \r\n      const updateProfileSubmit = (e) => {\r\n        e.preventDefault();\r\n    \r\n        const myForm = new FormData();\r\n       \r\n        myForm.set(\"name\", name);\r\n        myForm.set(\"email\", email);\r\n        myForm.set(\"avatar\", avatar);\r\n        dispatch(updateProfile(myForm));\r\n      };\r\n    \r\n      const updateProfileDataChange = (e) => {\r\n          const reader = new FileReader();\r\n    \r\n          reader.onload = () => {\r\n            if (reader.readyState === 2) {\r\n              setAvatarPreview(reader.result);\r\n              setAvatar(reader.result);\r\n            }\r\n          };\r\n    \r\n          reader.readAsDataURL(e.target.files[0]);\r\n      };\r\n      \r\n      useEffect(() =>{\r\n        if(user) {\r\n          setName(user.name);\r\n          setEmail(user.email);\r\n          setAvatarPreview(user.avatar.url);\r\n        }\r\n\r\n      if (error) {\r\n        alert.error(error);\r\n        dispatch(clearErrors());\r\n      }\r\n      \r\n      if(isUpdated) {\r\n       alert.success(\"Profile Updated Successfully\");\r\n       dispatch(loadUser());\r\n\r\n    if (history) {  \r\n       history.push(\"/account\");\r\n    }\r\n\r\n       dispatch({\r\n        type: UPDATE_PROFILE_RESET,\r\n       });\r\n      }\r\n      },[dispatch, error, alert, history,user, isUpdated]);\r\n\r\n\r\n    return <div></div>;\r\n};\r\n\r\nexport default UpdatePassword;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}