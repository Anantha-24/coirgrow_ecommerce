{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anant\\\\OneDrive\\\\Desktop\\\\Project\\\\Coir-Grow\\\\frontend\\\\src\\\\component\\\\admin\\\\UsersList.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useEffect } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport \"./ProductList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useAlert } from \"react-alert\";\nimport { Button } from \"@material-ui/core\";\nimport MetaData from \"../layout/MetaData\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Sidebar from \"./Sidebar\";\nimport { deleteUser, getAllUsers, clearErrors } from \"../../actions/userAction\";\nimport { DELETE_USER_RESET } from \"../../constants/userConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UsersList = para => {\n  _s();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const alert = useAlert();\n  const {\n    error,\n    users\n  } = useSelector(state => state.allUsers);\n  const {\n    error: deleteError,\n    isDeleted,\n    message\n  } = useSelector(state => state.profile);\n  const deleteUserHandler = id => {\n    dispatch(deleteUser(id));\n  };\n  useEffect(() => {\n    if (error) {\n      alert.error(error);\n      dispatch(clearErrors());\n    }\n    if (deleteError) {\n      alert.error(deleteError);\n      dispatch(clearErrors());\n    }\n    if (isDeleted) {\n      alert.success(message);\n      navigate(\"/admin/users\");\n      dispatch({\n        type: DELETE_USER_RESET\n      });\n    }\n    dispatch(getAllUsers());\n  }, [dispatch, alert, error, deleteError, navigate, isDeleted, message]);\n  const columns = [{\n    field: \"id\",\n    headerName: \"User ID\",\n    minWidth: 180,\n    flex: 0.8\n  }, {\n    field: \"email\",\n    headerName: \"Email\",\n    minWidth: 150,\n    flex: 1\n  }, {\n    field: \"name\",\n    headerName: \"Name\",\n    minWidth: 150,\n    flex: 0.3\n  }, {\n    field: \"role\",\n    headerName: \"Role\",\n    type: \"number\",\n    minWidth: 100,\n    flex: 0.3\n  }, {\n    field: \"actions\",\n    flex: 0.3,\n    headerName: \"Actions\",\n    minWidth: 100,\n    type: \"number\",\n    sortable: false,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/admin/user/${params.getValue(params.id, \"id\")}`,\n          children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => deleteUserHandler(params.getValue(params.id, \"id\")),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this);\n    }\n  }];\n  const rows = [];\n  users && users.forEach(item => {\n    rows.push({\n      id: item._id,\n      role: item.role,\n      email: item.email,\n      name: item.name\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MetaData, {\n      title: `ALL USERS -Admin`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"productListHeading\",\n          children: \"ALL USERS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: rows,\n          columns: columns,\n          pageSize: 10,\n          disableSelectionOnClick: true,\n          className: \"productListTable\",\n          autoHeight: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 13\n  }, this);\n};\n_s(UsersList, \"irco2mSr1pEGn1/FTMMtscw77AY=\", false, function () {\n  return [useDispatch, useNavigate, useAlert, useSelector, useSelector];\n});\n_c = UsersList;\nexport default UsersList;\nvar _c;\n$RefreshReg$(_c, \"UsersList\");","map":{"version":3,"names":["React","Fragment","useEffect","DataGrid","useSelector","useDispatch","Link","useNavigate","useAlert","Button","MetaData","EditIcon","DeleteIcon","Sidebar","deleteUser","getAllUsers","clearErrors","DELETE_USER_RESET","jsxDEV","_jsxDEV","UsersList","para","_s","dispatch","navigate","alert","error","users","state","allUsers","deleteError","isDeleted","message","profile","deleteUserHandler","id","success","type","columns","field","headerName","minWidth","flex","sortable","renderCell","params","children","to","getValue","fileName","_jsxFileName","lineNumber","columnNumber","onClick","rows","forEach","item","push","_id","role","email","name","title","className","pageSize","disableSelectionOnClick","autoHeight","_c","$RefreshReg$"],"sources":["C:/Users/anant/OneDrive/Desktop/Project/Coir-Grow/frontend/src/component/admin/UsersList.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\";\r\nimport { DataGrid } from \"@material-ui/data-grid\";\r\nimport \"./ProductList.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";  \r\nimport { useAlert } from \"react-alert\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport MetaData from \"../layout/MetaData\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport {deleteUser, getAllUsers, clearErrors } from \"../../actions/userAction\";\r\nimport { DELETE_USER_RESET } from \"../../constants/userConstants\";\r\n\r\nconst UsersList = (para) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    \r\n    const alert = useAlert();\r\n\r\n    const { error, users } = useSelector((state) => state.allUsers);\r\n\r\n    const { error: deleteError, isDeleted, message, } = useSelector(state => state.profile);\r\n\r\n    const deleteUserHandler =(id) =>{\r\n        dispatch(deleteUser(id));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            alert.error(error);\r\n            dispatch(clearErrors());\r\n        }\r\n\r\n        if (deleteError) {\r\n        alert.error(deleteError);\r\n        dispatch(clearErrors());\r\n        }\r\n\r\n        if (isDeleted) {\r\n            alert.success(message);\r\n            navigate(\"/admin/users\");\r\n            dispatch({ type: DELETE_USER_RESET });\r\n        }\r\n\r\n        dispatch(getAllUsers());\r\n    }, [dispatch, alert, error, deleteError, navigate, isDeleted, message]);\r\n\r\n    const columns = [\r\n        { field: \"id\", headerName: \"User ID\", minWidth: 180, flex:0.8 },\r\n\r\n        {\r\n            field: \"email\",\r\n            headerName : \"Email\",\r\n            minWidth: 150,\r\n            flex: 1,\r\n        },\r\n        {\r\n            field: \"name\",\r\n            headerName : \"Name\",\r\n            minWidth: 150,\r\n            flex: 0.3,\r\n        },\r\n        {\r\n            field: \"role\",\r\n            headerName : \"Role\",\r\n            type:\"number\",\r\n            minWidth: 100,\r\n            flex: 0.3,\r\n          \r\n        },\r\n        {\r\n            field: \"actions\",\r\n            flex: 0.3,\r\n            headerName: \"Actions\",\r\n            minWidth: 100,\r\n            type: \"number\",\r\n            sortable: false,\r\n            renderCell: (params) =>{\r\n                return (\r\n                    <Fragment>\r\n                    <Link to={`/admin/user/${params.getValue(params.id, \"id\")}`}>\r\n                     <EditIcon/>\r\n                    </Link>\r\n\r\n                   <Button onClick={()=>deleteUserHandler(params.getValue(params.id, \"id\"))}>\r\n                    <DeleteIcon />\r\n                   </Button>\r\n                    </Fragment>\r\n                )\r\n            }\r\n        }\r\n    ];\r\n\r\n   const rows = [];\r\n\r\n   users &&\r\n   users.forEach((item) => {\r\n        rows.push({\r\n            id: item._id,\r\n            role: item.role,\r\n            email: item.email,\r\n            name: item.name,\r\n        });\r\n     });\r\n\r\n    return (<Fragment>\r\n        <MetaData title={`ALL USERS -Admin`} />\r\n            \r\n        <div className=\"dashboard\">\r\n        <Sidebar />\r\n        <div className=\"productListContainer\">\r\n        <h1 id=\"productListHeading\">ALL USERS</h1>\r\n          <DataGrid\r\n            rows={rows}\r\n            columns={columns}\r\n            pageSize={10}\r\n            disableSelectionOnClick\r\n            className=\"productListTable\"\r\n            autoHeight\r\n          />\r\n        </div>\r\n        </div>\r\n    </Fragment>\r\n    );\r\n};\r\n\r\nexport default UsersList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}