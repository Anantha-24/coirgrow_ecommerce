{"ast":null,"code":"import axios from \"axios\";\nimport { ALL_PRODUCT_REQUEST, ALL_PRODUCT_SUCCESS, ALL_PRODUCT_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, CLEAR_ERRORS } from \"../constants/productConstants\";\nexport const getProduct = () => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/products\");\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\nexport const getProductDetails = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT__REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/products\");\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n//Clearing Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","ALL_PRODUCT_REQUEST","ALL_PRODUCT_SUCCESS","ALL_PRODUCT_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_SUCCESS","CLEAR_ERRORS","getProduct","dispatch","type","data","get","payload","error","response","message","getProductDetails","PRODUCT__REQUEST","clearErrors"],"sources":["C:/Users/anant/OneDrive/Desktop/Project/Coir-Grow/frontend/src/actions/productAction.js"],"sourcesContent":["import axios from \"axios\"\r\n\r\nimport {\r\n    ALL_PRODUCT_REQUEST,\r\n    ALL_PRODUCT_SUCCESS,\r\n    ALL_PRODUCT_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    CLEAR_ERRORS,\r\n} from \"../constants/productConstants\";\r\n\r\nexport const getProduct = ()=> async (dispatch) =>{\r\n    try{\r\n\r\n     dispatch({ type:ALL_PRODUCT_REQUEST });\r\n\r\n    const {data} = await axios.get(\"/api/v1/products\");\r\n\r\n     dispatch({\r\n        type:ALL_PRODUCT_SUCCESS,\r\n        payload:data,\r\n     })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ALL_PRODUCT_FAIL,\r\n            payload: error.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\nexport const getProductDetails = ()=> async (dispatch) =>{\r\n    try{\r\n\r\n     dispatch({ type:PRODUCT__REQUEST });\r\n\r\n    const {data} = await axios.get(\"/api/v1/products\");\r\n\r\n     dispatch({\r\n        type:ALL_PRODUCT_SUCCESS,\r\n        payload:data,\r\n     })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ALL_PRODUCT_FAIL,\r\n            payload: error.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\n//Clearing Errors\r\nexport const clearErrors = ()=> async (dispatch) =>{\r\n    dispatch({ type: CLEAR_ERRORS});\r\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SACIC,mBAAmB,EACnBC,mBAAmB,EACnBC,gBAAgB,EAChBC,uBAAuB,EACvBC,oBAAoB,EACpBC,uBAAuB,EACvBC,YAAY,QACT,+BAA+B;AAEtC,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAK,MAAOC,QAAQ,IAAI;EAC9C,IAAG;IAEFA,QAAQ,CAAC;MAAEC,IAAI,EAACT;IAAoB,CAAC,CAAC;IAEvC,MAAM;MAACU;IAAI,CAAC,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,kBAAkB,CAAC;IAEjDH,QAAQ,CAAC;MACNC,IAAI,EAACR,mBAAmB;MACxBW,OAAO,EAACF;IACX,CAAC,CAAC;EACH,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZL,QAAQ,CAAC;MACLC,IAAI,EAACP,gBAAgB;MACrBU,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;IACjC,CAAC,CAAC;EACN;AACJ,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAK,MAAOR,QAAQ,IAAI;EACrD,IAAG;IAEFA,QAAQ,CAAC;MAAEC,IAAI,EAACQ;IAAiB,CAAC,CAAC;IAEpC,MAAM;MAACP;IAAI,CAAC,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,kBAAkB,CAAC;IAEjDH,QAAQ,CAAC;MACNC,IAAI,EAACR,mBAAmB;MACxBW,OAAO,EAACF;IACX,CAAC,CAAC;EACH,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZL,QAAQ,CAAC;MACLC,IAAI,EAACP,gBAAgB;MACrBU,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;IACjC,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAGA,CAAA,KAAK,MAAOV,QAAQ,IAAI;EAC/CA,QAAQ,CAAC;IAAEC,IAAI,EAAEH;EAAY,CAAC,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}