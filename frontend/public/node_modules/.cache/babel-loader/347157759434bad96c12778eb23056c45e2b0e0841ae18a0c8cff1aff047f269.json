{"ast":null,"code":"import { CREATE_ORDER_REQUEST, CREATE_ORDER_SUCCESS, CREATE_ORDER_FAIL, MY_ORDERS_REQUEST, MY_ORDERS_SUCCESS, MY_ORDERS_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, CLEAR_ERRORS } from \"../constants/orderConstants\";\nimport axios from \"axios\";\n\n// Create Order \nexport const createOrder = order => async dispatch => {\n  try {\n    dispatch({\n      type: CREATE_ORDER_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/v1/order/new\", order, config);\n    dispatch({\n      type: CREATE_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CREATE_ORDER_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// My Orders \nexport const myOrders = () => async dispatch => {\n  try {\n    dispatch({\n      type: MY_ORDERS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/orders/me\");\n    dispatch({\n      type: MY_ORDERS_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Get Order Details \nexport const getOrderDetails = () => async dispatch => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/v1/orders/me\");\n    dispatch({\n      type: MY_ORDERS_SUCCESS,\n      payload: data.orders\n    });\n  } catch (error) {\n    dispatch({\n      type: MY_ORDERS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n//Clearing Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["CREATE_ORDER_REQUEST","CREATE_ORDER_SUCCESS","CREATE_ORDER_FAIL","MY_ORDERS_REQUEST","MY_ORDERS_SUCCESS","MY_ORDERS_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","CLEAR_ERRORS","axios","createOrder","order","dispatch","type","config","headers","data","post","payload","error","response","message","myOrders","get","orders","getOrderDetails","clearErrors"],"sources":["C:/Users/anant/OneDrive/Desktop/Project/Coir-Grow/frontend/src/actions/orderAction.js"],"sourcesContent":["import {\r\n    CREATE_ORDER_REQUEST,\r\n    CREATE_ORDER_SUCCESS,\r\n    CREATE_ORDER_FAIL,\r\n    MY_ORDERS_REQUEST,\r\n    MY_ORDERS_SUCCESS,\r\n    MY_ORDERS_FAIL,\r\n    ORDER_DETAILS_REQUEST,\r\n    ORDER_DETAILS_SUCCESS,\r\n    ORDER_DETAILS_FAIL,\r\n    CLEAR_ERRORS, \r\n} from \"../constants/orderConstants\";\r\n\r\nimport axios from \"axios\";\r\n\r\n// Create Order \r\nexport const createOrder =(order) => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: CREATE_ORDER_REQUEST });\r\n\r\n      const config ={ \r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n      };  \r\n      const { data } = await axios.post(\"/api/v1/order/new\", order, config);\r\n       \r\n      dispatch({ type: CREATE_ORDER_SUCCESS, payload: data});\r\n    }catch (error) {\r\n        dispatch({\r\n            type: CREATE_ORDER_FAIL,\r\n            payload: error.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\n\r\n// My Orders \r\nexport const myOrders =() => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: MY_ORDERS_REQUEST });\r\n\r\n      const { data } = await axios.get(\"/api/v1/orders/me\");\r\n       \r\n      dispatch({ type: MY_ORDERS_SUCCESS, payload: data.orders});\r\n    }catch (error) {\r\n        dispatch({\r\n            type: MY_ORDERS_FAIL,\r\n            payload: error.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Get Order Details \r\nexport const getOrderDetails =() => async (dispatch) => {\r\n    try{\r\n        dispatch({ type: ORDER_DETAILS_REQUEST });\r\n\r\n      const { data } = await axios.get(\"/api/v1/orders/me\");\r\n       \r\n      dispatch({ type: MY_ORDERS_SUCCESS, payload: data.orders});\r\n    }catch (error) {\r\n        dispatch({\r\n            type: MY_ORDERS_FAIL,\r\n            payload: error.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\n//Clearing Errors\r\nexport const clearErrors = ()=> async (dispatch) =>{\r\n    dispatch({ type: CLEAR_ERRORS});\r\n};"],"mappings":"AAAA,SACIA,oBAAoB,EACpBC,oBAAoB,EACpBC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,cAAc,EACdC,qBAAqB,EACrBC,qBAAqB,EACrBC,kBAAkB,EAClBC,YAAY,QACT,6BAA6B;AAEpC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,WAAW,GAAGC,KAAK,IAAK,MAAOC,QAAQ,IAAK;EACrD,IAAG;IACCA,QAAQ,CAAC;MAAEC,IAAI,EAAEd;IAAqB,CAAC,CAAC;IAE1C,MAAMe,MAAM,GAAE;MACZC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACF,CAAC;IACD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAAC,mBAAmB,EAAEN,KAAK,EAAEG,MAAM,CAAC;IAErEF,QAAQ,CAAC;MAAEC,IAAI,EAAEb,oBAAoB;MAAEkB,OAAO,EAAEF;IAAI,CAAC,CAAC;EACxD,CAAC,QAAOG,KAAK,EAAE;IACXP,QAAQ,CAAC;MACLC,IAAI,EAAEZ,iBAAiB;MACvBiB,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;IACjC,CAAC,CAAC;EACN;AACJ,CAAC;;AAGD;AACA,OAAO,MAAMC,QAAQ,GAAEA,CAAA,KAAM,MAAOV,QAAQ,IAAK;EAC7C,IAAG;IACCA,QAAQ,CAAC;MAAEC,IAAI,EAAEX;IAAkB,CAAC,CAAC;IAEvC,MAAM;MAAEc;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACc,GAAG,CAAC,mBAAmB,CAAC;IAErDX,QAAQ,CAAC;MAAEC,IAAI,EAAEV,iBAAiB;MAAEe,OAAO,EAAEF,IAAI,CAACQ;IAAM,CAAC,CAAC;EAC5D,CAAC,QAAOL,KAAK,EAAE;IACXP,QAAQ,CAAC;MACLC,IAAI,EAAET,cAAc;MACpBc,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;IACjC,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,eAAe,GAAEA,CAAA,KAAM,MAAOb,QAAQ,IAAK;EACpD,IAAG;IACCA,QAAQ,CAAC;MAAEC,IAAI,EAAER;IAAsB,CAAC,CAAC;IAE3C,MAAM;MAAEW;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACc,GAAG,CAAC,mBAAmB,CAAC;IAErDX,QAAQ,CAAC;MAAEC,IAAI,EAAEV,iBAAiB;MAAEe,OAAO,EAAEF,IAAI,CAACQ;IAAM,CAAC,CAAC;EAC5D,CAAC,QAAOL,KAAK,EAAE;IACXP,QAAQ,CAAC;MACLC,IAAI,EAAET,cAAc;MACpBc,OAAO,EAAEC,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK;IACjC,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA,OAAO,MAAMK,WAAW,GAAGA,CAAA,KAAK,MAAOd,QAAQ,IAAI;EAC/CA,QAAQ,CAAC;IAAEC,IAAI,EAAEL;EAAY,CAAC,CAAC;AACnC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}