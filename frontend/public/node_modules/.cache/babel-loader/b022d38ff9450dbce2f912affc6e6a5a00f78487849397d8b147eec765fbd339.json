{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anant\\\\OneDrive\\\\Desktop\\\\Project\\\\Coir-Grow\\\\frontend\\\\src\\\\component\\\\Route\\\\ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Navigate, Route } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  element,\n  authenticatedPath,\n  ...rest\n}) => {\n  _s();\n  const {\n    loading,\n    isAuthenticated,\n    user\n  } = useSelector(state => state.user);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [!loading && /*#__PURE__*/_jsxDEV(Route, {\n      ...rest,\n      // render={(props) => {\n      //   if (isAuthenticated){\n      //     return <Redirect to= \"/login\" />;\n      //   }\n\n      //   return <Component {...props} />;\n      //  }}\n      element: isAuthenticated ? element : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_s(ProtectedRoute, \"Is/VqZ4xfCyoEtbtOvAKpoVUv3g=\", false, function () {\n  return [useSelector];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Fragment","useSelector","Navigate","Route","PropTypes","jsxDEV","_jsxDEV","ProtectedRoute","element","authenticatedPath","rest","_s","loading","isAuthenticated","user","state","children","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/anant/OneDrive/Desktop/Project/Coir-Grow/frontend/src/component/Route/ProtectedRoute.js"],"sourcesContent":["import React, { Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {Navigate, Route } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ProtectedRoute = ({ element, authenticatedPath, ...rest }) => {\r\n    const { loading, isAuthenticated, user } = useSelector((state) => state.user);\r\n\r\n    return (\r\n        <Fragment>\r\n            {!loading && (\r\n                <Route\r\n                {...rest}\r\n               // render={(props) => {\r\n                 //   if (isAuthenticated){\r\n                  //     return <Redirect to= \"/login\" />;\r\n                 //   }\r\n\r\n                 //   return <Component {...props} />;\r\n              //  }}\r\n              element={isAuthenticated ? element : <Navigate to={ \"/login\"} replace />}\r\n                />\r\n            )};\r\n           \r\n\r\n        </Fragment>\r\n         \r\n    );\r\n};\r\n\r\nexport default ProtectedRoute"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAAQC,QAAQ,EAAEC,KAAK,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAEC,iBAAiB;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAChE,MAAM;IAAEC,OAAO;IAAEC,eAAe;IAAEC;EAAK,CAAC,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACD,IAAI,CAAC;EAE7E,oBACIR,OAAA,CAACN,QAAQ;IAAAgB,QAAA,GACJ,CAACJ,OAAO,iBACLN,OAAA,CAACH,KAAK;MAAA,GACFO,IAAI;MACT;MACE;MACC;MACD;;MAEA;MACH;MACAF,OAAO,EAAEK,eAAe,GAAGL,OAAO,gBAAGF,OAAA,CAACJ,QAAQ;QAACe,EAAE,EAAG,QAAS;QAACC,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CACJ,EAAC,GAGN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC;AAGnB,CAAC;AAACX,EAAA,CAvBIJ,cAAc;EAAA,QAC2BN,WAAW;AAAA;AAAAsB,EAAA,GADpDhB,cAAc;AAyBpB,eAAeA,cAAc;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}