{"ast":null,"code":"import axios from \"axios\";\nimport { ALL_PRODUCT_REQUEST, ALL_PRODUCT_SUCCESS, ALL_PRODUCT_FAIL, ADMIN_PRODUCT_REQUEST, ADMIN_PRODUCT_SUCCESS, ADMIN_PRODUCT_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_SUCCESS, NEW_REVIEW_REQUEST, NEW_REVIEW_SUCCESS, NEW_REVIEW_FAIL, CLEAR_ERRORS } from \"../constants/productConstants\";\n\n// Get All Products\nexport const getProduct = (keyword = \"\", currentPage = 1, price = [0, 2000], category, ratings = 0) => async dispatch => {\n  try {\n    dispatch({\n      type: ALL_PRODUCT_REQUEST\n    });\n    let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&ratings[gte]=${ratings}`;\n    if (category) {\n      link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&category=${category}&\n       ratings[gte]=${ratings}`;\n    }\n    const {\n      data\n    } = await axios.get(link);\n\n    // console.log(\"API Request URL:\", link);\n\n    dispatch({\n      type: ALL_PRODUCT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ALL_PRODUCT_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n// Get All Products For Admin \nexport const getAdminProduct = () => async dispatch => {\n  t;\n};\n\n// Get Product Details\nexport const getProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/v1/product/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n//New Review\nexport const newReview = reviewData => async dispatch => {\n  try {\n    dispatch({\n      type: NEW_REVIEW_REQUEST\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/v1/review`, reviewData, config);\n    dispatch({\n      type: NEW_REVIEW_SUCCESS,\n      payload: data.success\n    });\n  } catch (error) {\n    dispatch({\n      type: NEW_REVIEW_FAIL,\n      payload: error.response.data.message\n    });\n  }\n};\n\n//Clearing Errors\nexport const clearErrors = () => async dispatch => {\n  dispatch({\n    type: CLEAR_ERRORS\n  });\n};","map":{"version":3,"names":["axios","ALL_PRODUCT_REQUEST","ALL_PRODUCT_SUCCESS","ALL_PRODUCT_FAIL","ADMIN_PRODUCT_REQUEST","ADMIN_PRODUCT_SUCCESS","ADMIN_PRODUCT_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_SUCCESS","NEW_REVIEW_REQUEST","NEW_REVIEW_SUCCESS","NEW_REVIEW_FAIL","CLEAR_ERRORS","getProduct","keyword","currentPage","price","category","ratings","dispatch","type","link","data","get","payload","error","response","message","getAdminProduct","t","getProductDetails","id","product","newReview","reviewData","config","headers","put","success","clearErrors"],"sources":["C:/Users/anant/OneDrive/Desktop/Project/Coir-Grow/frontend/src/actions/productAction.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n    ALL_PRODUCT_REQUEST,\r\n    ALL_PRODUCT_SUCCESS,\r\n    ALL_PRODUCT_FAIL,\r\n    ADMIN_PRODUCT_REQUEST,\r\n    ADMIN_PRODUCT_SUCCESS,\r\n    ADMIN_PRODUCT_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    NEW_REVIEW_REQUEST,\r\n    NEW_REVIEW_SUCCESS,\r\n    NEW_REVIEW_FAIL,\r\n    CLEAR_ERRORS,\r\n} from \"../constants/productConstants\";\r\n\r\n// Get All Products\r\nexport const getProduct = \r\n(keyword=\"\", currentPage= 1,price = [0, 2000], category, ratings = 0) => \r\nasync (dispatch) =>{\r\n    try{\r\n\r\n     dispatch({ type:ALL_PRODUCT_REQUEST });\r\n\r\n     \r\n  let link =`/api/v1/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&ratings[gte]=${ratings}`;\r\n     if(category){\r\n  link =`/api/v1/products?keyword=${keyword}&page=${currentPage}&price[gte]=${price[0]}&price[lte]=${price[1]}&category=${category}&\r\n       ratings[gte]=${ratings}`;\r\n    }\r\n     const { data } = await axios.get(link);\r\n     \r\n    // console.log(\"API Request URL:\", link);\r\n\r\n     dispatch({\r\n        type:ALL_PRODUCT_SUCCESS,\r\n        payload:data,\r\n     });\r\n    } catch (error) {\r\n        dispatch({\r\n            type:ALL_PRODUCT_FAIL,\r\n            payload: error.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Get All Products For Admin \r\nexport const getAdminProduct = () => async (dispatch) => {\r\n   t\r\n};\r\n\r\n// Get Product Details\r\nexport const getProductDetails = (id)=> async (dispatch) =>{\r\n    try{\r\n     dispatch({ type:PRODUCT_DETAILS_REQUEST });\r\n\r\n    const {data} = await axios.get(`/api/v1/product/${id}`);\r\n\r\n     dispatch({\r\n        type:PRODUCT_DETAILS_SUCCESS,\r\n        payload:data.product,\r\n     })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:PRODUCT_DETAILS_FAIL,\r\n            payload: error.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\n//New Review\r\nexport const newReview = (reviewData)=> async (dispatch) =>{\r\n    try{\r\n     dispatch({ type:NEW_REVIEW_REQUEST});\r\n\r\n    const config = {\r\n        headers: { \"Content-Type\": \"application/json\"},\r\n    };\r\n\r\n    const {data} = await axios.put(`/api/v1/review`,reviewData, config);\r\n\r\n     dispatch({\r\n        type:NEW_REVIEW_SUCCESS,\r\n        payload:data.success,\r\n     })\r\n    } catch (error) {\r\n        dispatch({\r\n            type:NEW_REVIEW_FAIL,\r\n            payload: error.response.data.message,\r\n        });\r\n    }\r\n};\r\n\r\n//Clearing Errors\r\nexport const clearErrors = ()=> async (dispatch) =>{\r\n    dispatch({ type: CLEAR_ERRORS});\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}